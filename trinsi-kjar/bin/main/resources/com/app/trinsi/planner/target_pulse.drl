package com.app.trinsi.planner

//list any import classes here.
import com.app.trinsi.model.CATEGORY;
import com.app.trinsi.model.UserHealth;
import com.app.trinsi.model.UserPlanner;
//declare any global variables here


// staviti da se racuna kad pravi planner
//: puls korisnika u stanju mirovanja oduzme se od maksimalnog pulsa (220 – godine korisnika), a zatim zavisno od kategorije se pomnoži sa koeficijentom:
//0.6 - početnik
//0,7 - srednja
//0,85 - napredna.
//Zatim se puls u stanju mirovanja doda dobijenom broju i rezultat je ciljni puls tokom vežbanja.
//((220 - health.years) - health.pulse) * 0.6 + health.pulse
rule "Target pulse begginer"
    when
        $u: UserHealth($pulse: pulse, $years: years)
        $p: UserPlanner(category == CATEGORY.BEGINNER)
    then
        modify($p){setTargetPulse((int) Math.round(((220 - $years) - $pulse) * 0.6 + $pulse));}
end

rule "Target pulse middle"
    when
        $u: UserHealth($pulse: pulse, $years: years)
        $p: UserPlanner(category == CATEGORY.MIDDLE)
    then
         modify($p){setTargetPulse((int) Math.round(((220 - $years) - $pulse) * 0.7 + $pulse));}
end

rule "Target pulse advanced"
    when
        $u: UserHealth($pulse: pulse, $years: years)
        $p: UserPlanner(category == CATEGORY.ADVANCED)
    then
         modify($p){setTargetPulse((int) Math.round(((220 - $years) - $pulse) * 0.85 + $pulse));}
end