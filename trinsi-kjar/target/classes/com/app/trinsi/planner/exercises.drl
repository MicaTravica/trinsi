package com.app.trinsi.planner

//list any import classes here.
import com.app.trinsi.model.EXERCISE_TYPE;
import com.app.trinsi.model.HEALTH_CONDITION;
import com.app.trinsi.model.PHYSICAL_CHARACTERISTICS;
import com.app.trinsi.model.Exercise;
import com.app.trinsi.model.UserPlanner;
//declare any global variables here

rule "Add exercises"
    when
        $p: UserPlanner(exercises.size() < numOfExercise, $exercises: exercises, $category: category,
                        $exerciseType: exerciseType)
        $e: Exercise(!(this memberOf $exercises), exerciseWeight == $category, exerciseType == $exerciseType)
    then
        modify($p){addExercise($e);}

end

rule "Add exercises2"
    salience -100
    when
        $p: UserPlanner(exercises.size() < numOfExercise, $exercises: exercises)
        $e: Exercise() from $exercises
        $n: Integer() from accumulate(
            Exercise(this == $e) from $exercises,
            init (int count = 0;),
            action (count += 1;),
            result (count)
        )
//        $ne: Exercise(this != $e) from $exercises
//        $m: Integer(intValue > 0) from accumulate(
//            $c: Integer(intValue < $n) from accumulate (
//                Exercise(this == $ne) from $exercises,
//                init (int count = 0;),
//                action (count += 1;),
//                result (count)
//            ),
//            init (int min = 1000;),
//            action (min = Math.min(min, $c);),
//            result (min)
//        )
//
//        this != $e,
//                        $c: Integer(intValue < $n ) from accumulate(
//                            Exercise(this != $ne) from $exercises,
//                            init (int count = 0;),
//                            action (count += 1;),
//                            result (count)
//                        ),
//        $m: Integer() from accumulate(
//            $e : Exercise(this == $e),
//            init (int count = 0;),
//            action (count += 1;),
//            result (count)
//            $p : UserPlanner(
//            $category == category,
//            $exerciseType == exerciseType,
//            $nof: numOfExercise),
//            init (int max = 0;),
//            action (max = Math.max(max, $nof);),
//            result (max)
//        )
    then
        System.out.println($n);
//        System.out.println($m);
        modify($p){addExercise($e);}
end