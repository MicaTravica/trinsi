package com.app.trinsi.alarm

//list any import classes here.
import com.app.trinsi.model.BLOOD_PRESSURE_CLASSIFICATION;
import com.app.trinsi.model.NUTRITION_LEVEL;
import com.app.trinsi.model.HeartBeatTracking;
import com.app.trinsi.model.Alarm;
//declare any global variables here

rule "Breathe deeply, hypertension"
    salience 10
    when
        $hb1: HeartBeatTracking( $userId: userId, $tp: (upperPulseLimit + 0.05 * upperPulseLimit), $tp < currentPulse,
        (bloodPressureClassification == BLOOD_PRESSURE_CLASSIFICATION.HYPERTENSION1 ||
         bloodPressureClassification == BLOOD_PRESSURE_CLASSIFICATION.HYPERTENSION2 ))
        not (Alarm(userId == $userId))
    then
        insert(new Alarm($userId, "Breathe deeply"));
        delete($hb1);
end

rule "Breathe deeply, no hypertension"
    salience 10
    when
        $hb1: HeartBeatTracking( $userId: userId, $tp: (upperPulseLimit + 0.05  * upperPulseLimit), $tp < currentPulse,
        (bloodPressureClassification != BLOOD_PRESSURE_CLASSIFICATION.HYPERTENSION1 ||
        bloodPressureClassification != BLOOD_PRESSURE_CLASSIFICATION.HYPERTENSION2 ))
        $n: Number(intValue == 0) from accumulate(
            $hb2 : HeartBeatTracking(
            this != $hb1,
            userId == $userId,
            $tp >= currentPulse,
            this before[0m, 10m] $hb1),
            count($hb2)
        )
        not (Alarm(userId == $userId))
    then
        insert(new Alarm($userId, "Breathe deeply"));
        delete($hb1);
end

rule "Take a break of 2 minutes, walk, hypertension"
    salience 25
    when
        $hb1: HeartBeatTracking( $userId: userId, $tp: (upperPulseLimit + 0.1 * upperPulseLimit), $tp < currentPulse,
        (bloodPressureClassification == BLOOD_PRESSURE_CLASSIFICATION.HYPERTENSION1 ||
        bloodPressureClassification == BLOOD_PRESSURE_CLASSIFICATION.HYPERTENSION2 ) )
        not (Alarm(userId == $userId))
    then
        insert(new Alarm($userId, "Take a break of 2 minutes, walk"));
        delete($hb1);
end

rule "Take a break of 2 minutes, walk, no hypertension"
    salience 25
    when
        $hb1: HeartBeatTracking( $userId: userId, $tp: (upperPulseLimit + 0.1 * upperPulseLimit), $tp < currentPulse,
        (bloodPressureClassification != BLOOD_PRESSURE_CLASSIFICATION.HYPERTENSION1 ||
        bloodPressureClassification != BLOOD_PRESSURE_CLASSIFICATION.HYPERTENSION2 ))
        $n: Number(intValue == 0) from accumulate(
            $hb2 : HeartBeatTracking(
            this != $hb1,
            userId == $userId,
            $tp >= currentPulse,
            this before[0m, 5m] $hb1),
            count($hb2)
        )
        not (Alarm(userId == $userId))
    then
        insert(new Alarm($userId, "Take a break of 2 minutes, walk"));
        delete($hb1);
end

rule "Take a break of 5 minutes, walk, hypertension or obesity"
    salience 50
    when
        $hb1: HeartBeatTracking( $userId: userId, $tp: (upperPulseLimit + 0.2 * upperPulseLimit), $tp < currentPulse,
        (bloodPressureClassification == BLOOD_PRESSURE_CLASSIFICATION.HYPERTENSION1 ||
        bloodPressureClassification == BLOOD_PRESSURE_CLASSIFICATION.HYPERTENSION2  ||
        nutritionLevel == NUTRITION_LEVEL.OBESITY))
        not (Alarm(userId == $userId))
    then
        insert(new Alarm($userId, "Take a break of 5 minutes, walk"));
        delete($hb1);
end

rule "Take a break of 5 minutes, walk, no hypertensy or obesity"
    salience 50
    when
        $hb1: HeartBeatTracking( $userId: userId, $tp: (upperPulseLimit + 0.2 * upperPulseLimit), $tp < currentPulse,
        (bloodPressureClassification != BLOOD_PRESSURE_CLASSIFICATION.HYPERTENSION1 ||
        bloodPressureClassification != BLOOD_PRESSURE_CLASSIFICATION.HYPERTENSION2  ||
        nutritionLevel != NUTRITION_LEVEL.OBESITY))
        $n: Number(intValue == 0) from accumulate(
            $hb2 : HeartBeatTracking(
            this != $hb1,
            userId == $userId,
            $tp >= currentPulse,
            this before[0m, 1m] $hb1),
            count($hb2)
        )
        not (Alarm(userId == $userId))
    then
        insert(new Alarm($userId, "Take a break of 5 minutes, walk"));
        delete($hb1);
end

rule "Stop exercising"
    salience 100
    when
        $hb1: HeartBeatTracking( $userId: userId, $tp: (upperPulseLimit + 0.3 * upperPulseLimit), $tp < currentPulse )
        not (Alarm(userId == $userId))
    then
        insert(new Alarm($userId, "Stop exercising"));
        delete($hb1);
end

rule "Speed up"
    when
        $hb1: HeartBeatTracking( $userId: userId, lowerPulseLimit > currentPulse)
        $n: Number(intValue == 0) from accumulate(
        $hb2 : HeartBeatTracking(
            this != $hb1,
            userId == $userId,
            lowerPulseLimit <= currentPulse,
            this before[0m, 10m] $hb1),
            count($hb2)
        )
        not (Alarm(userId == $userId))
    then
        insert(new Alarm($userId, "Speed up"));
        delete($hb1);
end


